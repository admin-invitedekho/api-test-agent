{"name": "Complete User Journey with Post and Comment Creation", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'the API base URL is \"https://jsonplaceholder.typicode.com\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given the API base URL is \"https://jsonplaceholder.typicode.com\"')\n\n"}, "steps": [{"name": "Given the API base URL is \"https://jsonplaceholder.typicode.com\"", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'the API base URL is \"https://jsonplaceholder.typicode.com\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given the API base URL is \"https://jsonplaceholder.typicode.com\"')\n\n"}, "start": 1748334182570, "stop": 1748334182570}, {"name": "Given I execute API request \"get_api\" with parameters", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'I execute API request \"get_api\" with parameters')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given I execute API request \"get_api\" with parameters')\n\n"}, "attachments": [{"name": ".text", "source": "73406218-0eca-4818-8a17-fb4700175673-attachment.txt", "type": "text/plain"}], "start": 1748334182570, "stop": 1748334182570}, {"name": "Then the response status should be 200", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response status should be 200')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response status should be 200')\n\n"}, "start": 1748334182570, "stop": 1748334182570}, {"name": "And the response should contain", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain')\n\n"}, "attachments": [{"name": ".text", "source": "473a75d6-7b84-49ff-aac9-6e6c61955f9d-attachment.txt", "type": "text/plain"}], "start": 1748334182570, "stop": 1748334182570}, {"name": "When I execute API request \"post_api\" with parameters", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@when(u'I execute API request \"post_api\" with parameters')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: When I execute API request \"post_api\" with parameters')\n\n"}, "attachments": [{"name": ".text", "source": "b2d409f8-c38f-455d-873e-6aeb931ec223-attachment.txt", "type": "text/plain"}], "start": 1748334182570, "stop": 1748334182570}, {"name": "Then the response status should be 201", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response status should be 201')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response status should be 201')\n\n"}, "start": 1748334182570, "stop": 1748334182570}, {"name": "And the response should contain field \"id\" with numeric value", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain field \"id\" with numeric value')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain field \"id\" with numeric value')\n\n"}, "start": 1748334182570, "stop": 1748334182570}, {"name": "And the response field \"userId\" should equal the previous response field \"id\"", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response field \"userId\" should equal the previous response field \"id\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response field \"userId\" should equal the previous response field \"id\"')\n\n"}, "start": 1748334182570, "stop": 1748334182570}, {"name": "When I execute API request \"post_api\" with parameters", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@when(u'I execute API request \"post_api\" with parameters')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: When I execute API request \"post_api\" with parameters')\n\n"}, "attachments": [{"name": ".text", "source": "c059320e-d7ca-4157-9d96-b131f97ea4a9-attachment.txt", "type": "text/plain"}], "start": 1748334182570, "stop": 1748334182570}, {"name": "Then the response status should be 201", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response status should be 201')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response status should be 201')\n\n"}, "start": 1748334182570, "stop": 1748334182570}, {"name": "And the response field \"postId\" should equal the previous response field \"id\"", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response field \"postId\" should equal the previous response field \"id\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response field \"postId\" should equal the previous response field \"id\"')\n\n"}, "start": 1748334182571, "stop": 1748334182571}], "start": 1748334182570, "stop": 1748334182571, "uuid": "1fc00c95-3a9d-4e4a-916d-f7b82f21281f", "historyId": "5a2eaa5bb11c2142db94f21306e65182", "fullName": "Complex Integration Testing with Multi-Step Data Validation: Complete User Journey with Post and Comment Creation", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "complex"}, {"name": "tag", "value": "integration"}, {"name": "feature", "value": "Complex Integration Testing with Multi-Step Data Validation"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}