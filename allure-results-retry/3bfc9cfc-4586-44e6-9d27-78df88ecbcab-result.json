{"name": "Parallel Operation Validation", "status": "failed", "statusDetails": {"message": "AssertionError: Array length 0 is not greater than 1\n", "trace": "  File \"/Users/vibhorgoyal/PersonalWorkspace/api-test-agent/venv/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/vibhorgoyal/PersonalWorkspace/api-test-agent/venv/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"features/steps/api_steps.py\", line 104, in step_check_response_array_length_greater\n    assert len(response_data) > min_length, f\"Array length {len(response_data)} is not greater than {min_length}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "Given the API base URL is \"https://jsonplaceholder.typicode.com\"", "status": "passed", "start": 1748341255561, "stop": 1748341255561}, {"name": "Given I execute API request \"get_api\" with parameters", "status": "passed", "attachments": [{"name": ".text", "source": "9a5db048-9dfa-4541-8200-dbf124d8302c-attachment.txt", "type": "text/plain"}], "start": 1748341255562, "stop": 1748341255969}, {"name": "Then the response status should be 200", "status": "passed", "start": 1748341255969, "stop": 1748341255970}, {"name": "When I execute API request \"post_api\" with parameters", "status": "passed", "attachments": [{"name": ".text", "source": "e9772b3e-b92c-4648-b7bf-3851183f4df3-attachment.txt", "type": "text/plain"}], "start": 1748341255970, "stop": 1748341256474}, {"name": "Then the response status should be 201", "status": "passed", "start": 1748341256474, "stop": 1748341256474}, {"name": "When I execute API request \"post_api\" with parameters", "status": "passed", "attachments": [{"name": ".text", "source": "aaf6f3b1-48ae-4e78-be86-cfef9becf5df-attachment.txt", "type": "text/plain"}], "start": 1748341256475, "stop": 1748341257178}, {"name": "Then the response status should be 201", "status": "passed", "start": 1748341257179, "stop": 1748341257179}, {"name": "And the response should contain field \"id\" with numeric value", "status": "passed", "start": 1748341257179, "stop": 1748341257179}, {"name": "When I execute API request \"get_api\" with parameters", "status": "passed", "attachments": [{"name": ".text", "source": "e6eeb6b3-73a7-4ae5-ae03-d56f5f86302a-attachment.txt", "type": "text/plain"}], "start": 1748341257179, "stop": 1748341257587}, {"name": "Then the response status should be 200", "status": "passed", "start": 1748341257588, "stop": 1748341257588}, {"name": "And the response should be an array with length greater than 1", "status": "failed", "statusDetails": {"message": "AssertionError: Array length 0 is not greater than 1\n", "trace": "  File \"/Users/vibhorgoyal/PersonalWorkspace/api-test-agent/venv/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/vibhorgoyal/PersonalWorkspace/api-test-agent/venv/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"features/steps/api_steps.py\", line 104, in step_check_response_array_length_greater\n    assert len(response_data) > min_length, f\"Array length {len(response_data)} is not greater than {min_length}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "attachments": [{"name": "Failed step: the response should be an array with length greater than 1", "source": "d3960ba0-5f8f-46d0-bfc4-1b0eed321df4-attachment.txt", "type": "text/plain"}], "start": 1748341257589, "stop": 1748341257591}], "start": 1748341255561, "stop": 1748341257591, "uuid": "52dc0cba-3938-44af-ad64-0b61fdec8d78", "historyId": "3b261f107cf9816f62596ccb18be7477", "fullName": "Complex Integration Testing with Multi-Step Data Validation: Parallel Operation Validation", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "complex"}, {"name": "tag", "value": "parallel-operations"}, {"name": "feature", "value": "Complex Integration Testing with Multi-Step Data Validation"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}